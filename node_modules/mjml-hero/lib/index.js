"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _mjmlCore = require("mjml-core");

var _fp = require("lodash/fp");

var _widthParser2 = _interopRequireDefault(require("mjml-core/lib/helpers/widthParser"));

var makeBackgroundString = (0, _fp.flow)((0, _fp.filter)(_fp.identity), (0, _fp.join)(' '));

var MjHero = /*#__PURE__*/function (_BodyComponent) {
  (0, _inherits2["default"])(MjHero, _BodyComponent);

  function MjHero() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2["default"])(this, MjHero);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2["default"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3["default"])(MjHero)).call.apply(_getPrototypeOf2, [this].concat(args)));
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "getBackground", function () {
      return makeBackgroundString([_this.getAttribute('background-color')].concat((0, _toConsumableArray2["default"])(_this.getAttribute('background-url') ? ["url(".concat(_this.getAttribute('background-url'), ")"), 'no-repeat', "".concat(_this.getAttribute('background-position'), " / cover")] : [])));
    });
    return _this;
  }

  (0, _createClass2["default"])(MjHero, [{
    key: "getChildContext",
    value: function getChildContext() {
      // Refactor -- removePaddingFor(width, ['padding', 'inner-padding'])
      var containerWidth = this.context.containerWidth;
      var paddingSize = this.getShorthandAttrValue('padding', 'left') + this.getShorthandAttrValue('padding', 'right');
      var currentContainerWidth = "".concat(parseFloat(containerWidth), "px");

      var _widthParser = (0, _widthParser2["default"])(currentContainerWidth, {
        parseFloatToInt: false
      }),
          unit = _widthParser.unit,
          parsedWidth = _widthParser.parsedWidth;

      if (unit === '%') {
        currentContainerWidth = "".concat(parseFloat(containerWidth) * parsedWidth / 100 - paddingSize, "px");
      } else {
        currentContainerWidth = "".concat(parsedWidth - paddingSize, "px");
      }

      return (0, _objectSpread2["default"])({}, this.context, {
        containerWidth: currentContainerWidth
      });
    }
  }, {
    key: "getStyles",
    value: function getStyles() {
      var containerWidth = this.context.containerWidth;
      var backgroundRatio = Math.round(parseInt(this.getAttribute('background-height'), 10) / parseInt(this.getAttribute('background-width'), 10) * 100);
      var width = this.getAttribute('background-width') || containerWidth;
      return {
        div: {
          margin: '0 auto',
          'max-width': containerWidth
        },
        table: {
          width: '100%'
        },
        tr: {
          'vertical-align': 'top'
        },
        'td-fluid': {
          width: "0.01%",
          'padding-bottom': "".concat(backgroundRatio, "%"),
          'mso-padding-bottom-alt': '0'
        },
        hero: {
          background: this.getBackground(),
          'background-position': this.getAttribute('background-position'),
          'background-repeat': 'no-repeat',
          padding: this.getAttribute('padding'),
          'padding-top': this.getAttribute('padding-top'),
          'padding-left': this.getAttribute('padding-left'),
          'padding-right': this.getAttribute('padding-right'),
          'padding-bottom': this.getAttribute('padding-bottom'),
          'vertical-align': this.getAttribute('vertical-align')
        },
        'outlook-table': {
          width: containerWidth
        },
        'outlook-td': {
          'line-height': 0,
          'font-size': 0,
          'mso-line-height-rule': 'exactly'
        },
        'outlook-inner-table': {
          width: containerWidth
        },
        'outlook-image': {
          border: '0',
          height: this.getAttribute('background-height'),
          'mso-position-horizontal': 'center',
          position: 'absolute',
          top: 0,
          width: width,
          'z-index': '-3'
        },
        'outlook-inner-td': {
          'background-color': this.getAttribute('inner-background-color'),
          padding: this.getAttribute('inner-padding'),
          'padding-top': this.getAttribute('inner-padding-top'),
          'padding-left': this.getAttribute('inner-padding-left'),
          'padding-right': this.getAttribute('inner-padding-right'),
          'padding-bottom': this.getAttribute('inner-padding-bottom')
        },
        'inner-table': {
          width: '100%',
          margin: '0px'
        },
        'inner-div': {
          'background-color': this.getAttribute('inner-background-color'),
          "float": this.getAttribute('align'),
          margin: '0px auto',
          width: this.getAttribute('width')
        }
      };
    }
  }, {
    key: "renderContent",
    value: function renderContent() {
      var containerWidth = this.context.containerWidth;
      var children = this.props.children;
      return "\n      <!--[if mso | IE]>\n        <table\n          ".concat(this.htmlAttributes({
        align: this.getAttribute('align'),
        border: '0',
        cellpadding: '0',
        cellspacing: '0',
        style: 'outlook-inner-table',
        width: containerWidth.replace('px', '')
      }), "\n        >\n          <tr>\n            <td ").concat(this.htmlAttributes({
        style: 'outlook-inner-td'
      }), ">\n      <![endif]-->\n      <div\n        ").concat(this.htmlAttributes({
        align: this.getAttribute('align'),
        "class": 'mj-hero-content',
        style: 'inner-div'
      }), "\n      >\n        <table\n          ").concat(this.htmlAttributes({
        border: '0',
        cellpadding: '0',
        cellspacing: '0',
        role: 'presentation',
        style: 'inner-table'
      }), "\n        >\n          <tr>\n            <td ").concat(this.htmlAttributes({
        style: 'inner-td'
      }), " >\n              <table\n                ").concat(this.htmlAttributes({
        border: '0',
        cellpadding: '0',
        cellspacing: '0',
        role: 'presentation',
        style: 'inner-table'
      }), "\n              >\n                ").concat(this.renderChildren(children, {
        renderer: function renderer(component) {
          return (// eslint-disable-line no-confusing-arrow
            component.constructor.isRawElement() ? component.render() : "\n                    <tr>\n                      <td\n                        ".concat(component.htmlAttributes({
              align: component.getAttribute('align'),
              background: component.getAttribute('container-background-color'),
              "class": component.getAttribute('css-class'),
              style: {
                background: component.getAttribute('container-background-color'),
                'font-size': '0px',
                padding: component.getAttribute('padding'),
                'padding-top': component.getAttribute('padding-top'),
                'padding-right': component.getAttribute('padding-right'),
                'padding-bottom': component.getAttribute('padding-bottom'),
                'padding-left': component.getAttribute('padding-left'),
                'word-break': 'break-word'
              }
            }), "\n                      >\n                        ").concat(component.render(), "\n                      </td>\n                    </tr>\n                  ")
          );
        }
      }), "\n              </table>\n            </td>\n          </tr>\n        </table>\n      </div>\n      <!--[if mso | IE]>\n            </td>\n          </tr>\n        </table>\n      <![endif]-->\n    ");
    }
  }, {
    key: "renderMode",
    value: function renderMode() {
      var commonAttributes = {
        background: this.getAttribute('background-url'),
        style: 'hero'
      };
      /* eslint-disable no-alert, no-case-declarations */

      switch (this.getAttribute('mode')) {
        case 'fluid-height':
          var magicTd = this.htmlAttributes({
            style: "td-fluid"
          });
          return "\n          <td ".concat(magicTd, " />\n          <td ").concat(this.htmlAttributes((0, _objectSpread2["default"])({}, commonAttributes)), ">\n            ").concat(this.renderContent(), "\n          </td>\n          <td ").concat(magicTd, " />\n        ");

        case 'fixed-height':
        default:
          var height = parseInt(this.getAttribute('height'), 10) - this.getShorthandAttrValue('padding', 'top') - this.getShorthandAttrValue('padding', 'bottom');
          return "\n          <td\n            ".concat(this.htmlAttributes((0, _objectSpread2["default"])({}, commonAttributes, {
            height: height
          })), "\n          >\n            ").concat(this.renderContent(), "\n          </td>\n        ");
      }
      /* eslint-enable no-alert, no-case-declarations */

    }
  }, {
    key: "render",
    value: function render() {
      var containerWidth = this.context.containerWidth;
      return "\n      <!--[if mso | IE]>\n        <table\n          ".concat(this.htmlAttributes({
        align: 'center',
        border: '0',
        cellpadding: '0',
        cellspacing: '0',
        role: 'presentation',
        style: 'outlook-table',
        width: parseInt(containerWidth, 10)
      }), "\n        >\n          <tr>\n            <td ").concat(this.htmlAttributes({
        style: 'outlook-td'
      }), ">\n              <v:image\n                ").concat(this.htmlAttributes({
        style: 'outlook-image',
        src: this.getAttribute('background-url'),
        'xmlns:v': 'urn:schemas-microsoft-com:vml'
      }), "\n              />\n      <![endif]-->\n      <div\n        ").concat(this.htmlAttributes({
        align: this.getAttribute('align'),
        "class": this.getAttribute('css-class'),
        style: 'div'
      }), "\n      >\n        <table\n          ").concat(this.htmlAttributes({
        border: '0',
        cellpadding: '0',
        cellspacing: '0',
        role: 'presentation',
        style: 'table'
      }), "\n        >\n          <tr\n            ").concat(this.htmlAttributes({
        style: 'tr'
      }), "\n          >\n            ").concat(this.renderMode(), "\n          </tr>\n      </table>\n    </div>\n    <!--[if mso | IE]>\n          </td>\n        </tr>\n      </table>\n    <![endif]-->\n    ");
    }
  }]);
  return MjHero;
}(_mjmlCore.BodyComponent);

exports["default"] = MjHero;
(0, _defineProperty2["default"])(MjHero, "allowedAttributes", {
  mode: 'string',
  height: 'unit(px,%)',
  'background-url': 'string',
  'background-width': 'unit(px,%)',
  'background-height': 'unit(px,%)',
  'background-position': 'string',
  'container-background-color': 'color',
  'inner-background-color': 'color',
  'inner-padding': 'unit(px,%){1,4}',
  'inner-padding-top': 'unit(px,%)',
  'inner-padding-left': 'unit(px,%)',
  'inner-padding-right': 'unit(px,%)',
  'inner-padding-bottom': 'unit(px,%)',
  padding: 'unit(px,%){1,4}',
  'padding-bottom': 'unit(px,%)',
  'padding-left': 'unit(px,%)',
  'padding-right': 'unit(px,%)',
  'padding-top': 'unit(px,%)',
  'background-color': 'color',
  'vertical-align': 'enum(top,bottom,middle)'
});
(0, _defineProperty2["default"])(MjHero, "defaultAttributes", {
  mode: 'fixed-height',
  height: '0px',
  'background-url': null,
  'background-position': 'center center',
  padding: '0px',
  'padding-bottom': null,
  'padding-left': null,
  'padding-right': null,
  'padding-top': null,
  'background-color': '#ffffff',
  'vertical-align': 'top'
});
module.exports = exports.default;